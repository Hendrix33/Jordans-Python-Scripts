import os, sys, logging
from jnpr.junos import Device
from jnpr.junos.utils.sw import SW
from jnpr.junos.exception import ConnectError



package_srx = "/home/thor/junos_packages/junos-srxsme-18.4R3.3.tgz"
remote_path = "/var/tmp/"
validate = False
logfile = "/home/thor/junos_packages/install.log"

def update_progress(dev, report):
    # log the progress of the installing process
    logging.info(report)


def main():
    
    # initialize logging
    logging.basicConfig(filename=logfile, level=logging.INFO,
                        format='%(asctime)s:%(name)s: %(message)s')
    logging.getLogger().name = host
    logging.getLogger().addHandler(logging.StreamHandler())
    logging.info('Information logged in {0}'.format(logfile))
	
	# verify package exists
    if not (os.path.isfile(package)):
        msg = 'Software package does not exist: {0}. '.format(package)
        logging.error(msg)
        sys.exit()
		
		
    dev = Device(host="192.168.100.1", user="admin", passwd="juniper123")
    try:
		dev.open()
	except ConnectError as err:
        logging.error('Cannot connect to device: {0}\n'.format(err))
        return
	
	sw = SW(dev)
	
	if type != "18.4R3.3":
        print("Not on latest Junos version. Copying latest Junos image to device.")
        with SCP(dev, progress=True) as scp:
              scp.put(package_srx, remote_path)       
        try:
            logging.info('Starting the software upgrade process: {0}' \
            .format(package_srx))
            ok = sw.install(package=package_srx,remote_path=remote_path,progress=update_progress,validate=validate)
        except Exception as err:
            msg = 'Unable to install software, {0}'.format(err)
            logging.error(msg)
            ok = False
        
		if ok is True:
        logging.info('Software installation complete. Rebooting')
        rsp = sw.reboot()
        logging.info('Upgrade pending reboot cycle, please be patient.')
        logging.info(rsp)
    
	else:
        msg = 'Unable to install software, {0}'.format(ok)
        logging.error(msg)
		
    if type == "18.4R3.3":
        print("Looks like your device is already on the latest firmware. YAY!")
    else:
        print("Sorry, something went wrong.")
    dev.close()
if __name__ == "__main__":
    main()
